name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create test config
      run: |
        mkdir -p config
        echo '{
          "powerBIGroupId": "${{ secrets.POWERBI_GROUP_ID }}",
          "powerBIReportId": "${{ secrets.POWERBI_REPORT_ID }}",
          "powerBIDatasetId": "${{ secrets.POWERBI_DATASET_ID }}",
          "clientId": "${{ secrets.POWERBI_CLIENT_ID }}",
          "clientSecret": "${{ secrets.POWERBI_CLIENT_SECRET }}",
          "tenantId": "${{ secrets.POWERBI_TENANT_ID }}",
          "authorityUrl": "https://login.microsoftonline.com/${{ secrets.POWERBI_TENANT_ID }}",
          "azureOpenAIEndpoint": "${{ secrets.AZURE_OPENAI_ENDPOINT }}",
          "azureOpenAIApiKey": "${{ secrets.AZURE_OPENAI_API_KEY }}",
          "azureOpenAIDeploymentName": "${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}"
        }' > config/config.json
        
    - name: Run unit and integration tests
      run: npm run test:no-e2e
      env:
        NODE_ENV: test
        POWERBI_GROUP_ID: ${{ secrets.POWERBI_GROUP_ID }}
        POWERBI_REPORT_ID: ${{ secrets.POWERBI_REPORT_ID }}
        POWERBI_DATASET_ID: ${{ secrets.POWERBI_DATASET_ID }}
        POWERBI_CLIENT_ID: ${{ secrets.POWERBI_CLIENT_ID }}
        POWERBI_CLIENT_SECRET: ${{ secrets.POWERBI_CLIENT_SECRET }}
        POWERBI_TENANT_ID: ${{ secrets.POWERBI_TENANT_ID }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}
        
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        POWERBI_GROUP_ID: ${{ secrets.POWERBI_GROUP_ID }}
        POWERBI_REPORT_ID: ${{ secrets.POWERBI_REPORT_ID }}
        POWERBI_DATASET_ID: ${{ secrets.POWERBI_DATASET_ID }}
        POWERBI_CLIENT_ID: ${{ secrets.POWERBI_CLIENT_ID }}
        POWERBI_CLIENT_SECRET: ${{ secrets.POWERBI_CLIENT_SECRET }}
        POWERBI_TENANT_ID: ${{ secrets.POWERBI_TENANT_ID }}
        AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        AZURE_OPENAI_DEPLOYMENT_NAME: ${{ secrets.AZURE_OPENAI_DEPLOYMENT_NAME }}
        
    - name: Upload test results and coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          test_output.log
          test/coverage/
        retention-days: 7

  # Status check job
  test-status:
    runs-on: ubuntu-latest
    needs: [test]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "✅ All tests passed!"
          exit 0
        else
          echo "❌ Some tests failed"
          exit 1
        fi